name: Baskets

on:
  push:
    branches: [ "main", "github" ]
    # paths:
    #   - baskets/**
    #   - internal/**
    #   - stores/storespb/**

env:
  SERVICE: baskets

jobs:
  test:
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v3
      - name: Run Unit Tests
        working-directory: ./baskets
        run: |
          go mod tidy
          go test --cover ./...

  build:
    name: Baskets microservice deployment to EKS cluster
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

  #     - name: Install kubectl
  #       id: kubectl
  #       uses: azure/setup-kubectl@v3

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ${{ secrets.AWS_REGION }}

  #     - name: Login to AWS ECR
  #       id: ecr
  #       uses: aws-actions/amazon-ecr-login@v1
      - name: docker login
        env:
          DOCKER_USER: ${{secrets.DOCKER_USER}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD 

      - name: Build $SERVICE microservice
        env:
          # REGISTRY: ${{ steps.ecr.outputs.registry }}
          GITHUB_SHA: ${{ github.sha }}
          DOCKERFILE: docker/Dockerfile.microservices
        run: |
          # docker build -t $REGISTRY/$SERVICE:$GITHUB_SHA -t $REGISTRY/$SERVICE:latest --file $DOCKERFILE --build-arg=service=$SERVICE .
          docker build -t $SERVICE:latest --file $DOCKERFILE --build-arg=service=$SERVICE .
          docker push $SERVICE:latest
