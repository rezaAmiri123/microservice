// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/rezaAmiri123/microservice/users/usersclient/models"
)

// DisableUserReader is a Reader for the DisableUser structure.
type DisableUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DisableUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDisableUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewDisableUserDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDisableUserOK creates a DisableUserOK with default headers values
func NewDisableUserOK() *DisableUserOK {
	return &DisableUserOK{}
}

/*
DisableUserOK describes a response with status code 200, with default header values.

A successful response.
*/
type DisableUserOK struct {
	Payload models.UserspbDisableUserResponse
}

// IsSuccess returns true when this disable user o k response has a 2xx status code
func (o *DisableUserOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this disable user o k response has a 3xx status code
func (o *DisableUserOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this disable user o k response has a 4xx status code
func (o *DisableUserOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this disable user o k response has a 5xx status code
func (o *DisableUserOK) IsServerError() bool {
	return false
}

// IsCode returns true when this disable user o k response a status code equal to that given
func (o *DisableUserOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the disable user o k response
func (o *DisableUserOK) Code() int {
	return 200
}

func (o *DisableUserOK) Error() string {
	return fmt.Sprintf("[PATCH /v1/disable_user][%d] disableUserOK  %+v", 200, o.Payload)
}

func (o *DisableUserOK) String() string {
	return fmt.Sprintf("[PATCH /v1/disable_user][%d] disableUserOK  %+v", 200, o.Payload)
}

func (o *DisableUserOK) GetPayload() models.UserspbDisableUserResponse {
	return o.Payload
}

func (o *DisableUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDisableUserDefault creates a DisableUserDefault with default headers values
func NewDisableUserDefault(code int) *DisableUserDefault {
	return &DisableUserDefault{
		_statusCode: code,
	}
}

/*
DisableUserDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type DisableUserDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this disable user default response has a 2xx status code
func (o *DisableUserDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this disable user default response has a 3xx status code
func (o *DisableUserDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this disable user default response has a 4xx status code
func (o *DisableUserDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this disable user default response has a 5xx status code
func (o *DisableUserDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this disable user default response a status code equal to that given
func (o *DisableUserDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the disable user default response
func (o *DisableUserDefault) Code() int {
	return o._statusCode
}

func (o *DisableUserDefault) Error() string {
	return fmt.Sprintf("[PATCH /v1/disable_user][%d] disableUser default  %+v", o._statusCode, o.Payload)
}

func (o *DisableUserDefault) String() string {
	return fmt.Sprintf("[PATCH /v1/disable_user][%d] disableUser default  %+v", o._statusCode, o.Payload)
}

func (o *DisableUserDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *DisableUserDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
